global
    maxconn 2048
    debug

### HTTP(S) frontend ###
frontend www
    option forwardfor
    timeout connect {{or (key "service/haproxy/timeouts/connect") "10000ms"}}
    timeout client {{or (key "service/haproxy/timeouts/client") "100000ms"}}
    timeout server {{or (key "service/haproxy/timeouts/server") "100000ms"}}
    bind *:8000
    mode http
    {{ if env "HAPROXY_USESSL" }}bind *:443 ssl crt /haproxy/ssl.crt{{ end }}

    reqadd X-Forwarded-Proto:\ http if !{ ssl_fc }
    reqadd X-Forwarded-Proto:\ https if { ssl_fc }
    {{ if eq (env "HAPROXY_USESSL") "force" }}
    # Redirect all non-secure connections to HTTPS
    redirect scheme https if !{ ssl_fc }{{ end }}

    # Generated automatically by consul-template
{{ range services }}
  {{if .Tags | contains "http" }}
    acl host_{{ .Name }} hdr_beg(host) -i {{ .Name }}.{{ or (env "HAPROXY_DOMAIN") "haproxy.service.consul" }}
    use_backend {{ .Name }}_backend if host_{{ .Name }}
  {{ end }}
{{ end }}

### tcp frontend ###
{{ range services }}
    {{ if .Tags | contains "tcp" }}
frontend frontend_{{ .Name }}
    bind *:{{ index .Tags 0}}
    mode tcp
    default_backend {{ .Name }}_backend
    {{ end }}
{{ end }}

{{ if env "HAPROXY_STATS" }}
frontend stats
    bind *:1936
    mode http
    use_backend stats
{{ end }}


### Consul-configured backend services ###
{{ range services }}
backend {{ .Name }}_backend
{{ if .Tags.Contains "tcp" }}
   mode tcp
{{else}}
   mode http
{{ end }}
{{ range service .Name }}
   server {{ .Node }}-{{ .Port }} {{ .Address }}:{{ .Port }}{{ end }}
{{ end }}

{{ if env "HAPROXY_STATS" }}

backend stats
    stats enable
    stats hide-version
    stats refresh 5s
    stats scope .
    stats realm {{ or (env "HAPROXY_STATS_TITLE") "Haproxy Statistics" }}
    stats uri {{ or (env "HAPROXY_STATS_URI") "/" }}
{{ end }}